<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
  <mapper namespace="com.iu.s5.notice.NoticeDAO">
  	<sql id="search">
  		like '%'||#{search}||'%' 
  	</sql>
  
  
  	<resultMap type="NoticeVO" id="selectResult">
  		<id column="num" property="num" />
  		<result column="title" property="title"/>
  		<result column="writer" property="writer"/>
  		<result column="contents" property="contents"/>
  		<result column="regDate" property="regDate" />
  		<result column="hti" property="hit" />
  		
  		<collection property="boardFileVOs" javaType="List" ofType="BoardFileVO">
  			<id column="fileNum" property="fileNum"/>
			<result column="fileName" property="fileName"/>
			<result column="oriName" property="oriName"/>  	
			<result column="board" property="board"/>
			<result column="fileName" property="fileName"/>		
  		</collection>
  	</resultMap>
  
  
  	<!-- sql문을 분리하여 ㄴ넣자, crud작업 -->
  	<!-- 쿼리문 연결하고 끊을 때마다 자원 소모하는 것을 줄여줌  -->

	  <insert id="boardWrite" parameterType="NoticeVO">
	  	insert into notice values(#{num}, #{title}, #{writer}, #{contents}, sysdate, 0)
	  </insert>
	
	
		<delete id="boardDelete" parameterType="Long">
			delete notice where num=#{num}
		</delete>
		
		<update id="boardUpdate" parameterType="NoticeVO">
			update notice set title=#{title}, contents=#{contents} where num=#{num}
		</update>
		
		<update id="hitUpdate" parameterType="Long">
			update notice set hit = hit+1 where num = #{num}
		</update>
		
		
		<select id="boardSelect" parameterType="Long" resultMap="selectResult">
		<!-- 	select * from notice where num = #{num} -->
			select N.*, F.* 
			from notice N left join boardFile F 
			on (N.num = F.num)
			where N.num=#{num} and F.board=1
						
			
			
		</select>
		
		
		
		<select id="boardList"  parameterType="Pager" resultType="NoticeVO">
			select * from 
			(select N.*, rownum R from 
			(select * from notice where 
			
			<choose>
				<when test="kind == 'bw'">
					writer
				</when>
				<when test="kind == 'bt'">
					title
				</when>
				<otherwise>
					contents
				</otherwise>
			</choose>
			
			
			
			like '%'||#{search}||'%' and num>=1 order by num desc) N)
			where R between #{startRow} and #{lastRow}
		</select>
		
		
		<select id="boardNum" resultType="Long">
			select board_seq.nextval from dual 
		</select>

		
		
		
		
		<!-- 전체 글의 갯수 -->
		<select id="boardCount" parameterType="Pager" resultType="Long">
			select count(num) from notice
<!-- 			<choose>
				<when test="kind == 'bw'">
					writer
				</when>
				<when test="kind == 'bt'">
					title
				</when>
				<otherwise>
					contents
				</otherwise>
			</choose> -->
			
			<where>
				<if test="kind=='bt'">
					title like <include refid="search"></include> 
				</if>
				<if test="kind=='bw'">
					writer like <include refid="search"></include> 
				</if>
				<if test="kind=='bc'">
					contents like <include refid="search"></include> 
				</if>
			</where>
			
		

			
		</select>
		
		
		
		
		
		
  </mapper>
 